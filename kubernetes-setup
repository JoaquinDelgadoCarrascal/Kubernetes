#!/usr/bin/env python3

import os

#comprobar status ssh de esat y la otra maquina
print("Before starting with every configuration you will need to install ssh on your machines.")
while True:
    is_enter = input("Press enter to start or 'x' to exit: ")
    if is_enter == "":
        break
    elif is_enter == "x":
        exit(0)

######################
# HOST CONFIGURATION #
######################

print("Let's start with the Host machine configuration!")
host_ip = input("Host IP: ")
host_user = input("Host User: ")
remote_file_path = input("Remote file path (e.g: /home/user): ")
commands_host_path = os.path.dirname(os.path.abspath(__file__)) + "/commands_host"

os.system('scp {} {}@{}:{}'.format(commands_host_path, host_user, host_ip, remote_file_path))

print("Connecting to host machine . . .")
os.system('ssh -t {}@{} "chmod +x commands_host && ./commands_host"'.format(host_user, host_ip, remote_file_path))
os.system('scp {}@{}:{} {}'.format(host_user, host_ip, remote_file_path + "/.cmd.txt", "."))

#######################
# NODES CONFIGURATION #
#######################

print("Let's continue with the nodes machines configuration!")

while True:
    try:
        num_nodes = int(input("How many nodes do you want?: "))
        if num_nodes <= 0:
            print("\nYou need to have at least one node.\n")
        else:
            break
    except ValueError:
        print("\nPlease enter a valid number.\n")

commands_node_path = os.path.dirname(os.path.abspath(__file__)) + "/commands_node"
cmd_path = os.path.dirname(os.path.abspath(__file__)) + "/.cmd.txt"

for i in range(num_nodes):
    node_ip = input("Node IP for node {}: ".format(i + 1))
    node_user = input("Node User for node {}: ".format(i + 1))
    remote_file_path = input("Remote file path for node {} (e.g: /home/user): ".format(i + 1))

    os.system('scp {} {} {}@{}:{}'.format(commands_node_path, cmd_path, node_user, node_ip, remote_file_path))
    print("Connecting to node {} machine . . .".format(i + 1))
    os.system('ssh -t {}@{} "chmod +x commands_node && ./commands_node"'.format(node_user, node_ip, remote_file_path))